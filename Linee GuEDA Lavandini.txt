SCRIVO IN MANIERA ABBASTANZA TERRIBILE PER ORA, NEL CASO POI SISTEMO A POCO A POCO
le seguenti sono le 'parole chiave' del nostro progetto (o da
'administrative_regions_Trentino', 'df_corrente_dec', 'df_corrente_nov', 'df_meteo', 
'df_precipitazioni', 'df_social', 'df_ubicazioni', 'gdf', 'gdf_com' (e altri, I guess?)

in particolare per alcuni df: 
df_corrente avrà colonne: 'LINESET','time','corrente'
df_precipitazioni: 'time','cellId','pioggia'

(mattedo all'inizio inizio nel file EDA novembre fanno cose bruttissime che io non ho capito perchè sono troppo stupido)

LINEE ELETTRICHE
-Creo vettore coi nomi delle linee elettriche (da df_ubicazioni con colonna LINESET (?)) e definisco la costante conv_kWh, 
con cui vado a trasformare la corrente che scorre istante per istante nelle linee in potenza media misurata in kWh assorbita dall rete. 
-Tensione trifase associata alle ubicazioni civili: 240V (RMS) -> conv_kWh = 240 x 3600/1000 = 240 x 3.6

DA TIMESTEP A DATA GIORNO MESE ANNO...
Creare funzione che trasforma i timestep in date: anno-mese-giorno-... (format='%Y%m%d%H%M' I guess) e trasformo le colonne del tempo
dei df in colonne di date

RICHIESTA DELL'EDA: individuo AREE CON CONSUMI MAGGIORI:
-Associo consumo medio mensile delle linee elettrice con i quadratini delle linee
-Calcolo corrente pesata sulle ubicazioni dei quadratini (non ho capito), e sommo se ci sono più contributi (da più reti)
-Plotto risultato -> merge con griglia del Trentino
ATTENZIONE CHE ABBIANO LO STESSO SISTEMA DI COORDINATE (per i confini regioni amministr e griglia Trentino) -> scelgo una proiezione 
-Evidenzio i confini

RICHIESTA DELL'EDA: individuo LINEE ELETTRICHE CON MAGGIORI VARIAZIONI DI CONSUMI (in giornata e nel mese)
Mese:
-Calcolo 'derivata' fra un giorno e l'altro (vedo il consumo medio totale della giornata) (se vuoi vedi Mattedo)
-Seleziono soglia minima così da isolare solo alcune linee
-Plot dei valori per fare vedere (non necessario? o forse sì)
-Plot con linee elettriche colorate in questione su mappa trentino
Giornata:
-stessa cosa ma con i vari timestep, puoi farlo sui timestep singoli oppure anche sulle ore secondo me
(quindi in quel caso bisogna vedere il consumo medio totale delle ore)
-Plot come sopra
-Plot come sopra

STAZIONI METEO (get ready for the worst)
E' utile plottarle su mappa Trentino: (così poi per le predizioni di ML associo quadratini e dati meteo)
-Costruisco GeoDataFrame con posizioni stazioni meteo (Mattedo: creano una funzione per farlo, non nec?)
-Proietto su sistema coordinate

SOCIAL PULSE (dati dai social ?)
Procedimento analogo che per staz meteo
-" "
-" "

COSTRUISCO IL DF 'DEFINITIVO' (o totale) CON FEATURES
-Feature (colonna) 'corrente pesata' ad ogni timestep, la calcolo allo stesso modo (+ o -) che in riga 23
-Feature(?) (colonna) 'geometry': prendo coordinate spaziali dei quadratini -> merge con geodataframe (?)
- to be continued...

UNISCO POZIONI STAZ METEO, ma li collego linkandole ai comuni: (per poi associarne i dati nei luoghi)
^Spatial joint tra la mappa/griglia del Trentino e il GeoDataFrame dei comuni (così poi associo 
stazione meteo al comune) (awa awa)
^Spatial joint tra stazione meteo e comune associato (giustamente, preanticipato sopra) ?
-Insomma conviene che venga fuori alla fine per il DF DEFINITIVO una FEATURE 'COMUNE'
^(se ci sono Nan, vuol dire che il comune/quadratino semplicemente non ha stazione meteo)

-RIMUOVO Feature 'geometry' che adesso è inutile (ho il gdf e tutto, i comuni, ecc.)
-Rimuovo i quadratini senza stazioni meteo nella regione amministrativa

UNISCO DATI PRECIPITAZIONI (sono una roba a parte dalle stazioni meteo???)
-Attenzione alle date, che siano dello stesso tipo (?)
-Merge -> Feature 'pioggia' 
-Sostituisco i Nan con 0 (o non ci sono dati, o non ha piovuto)

UNISCO FEATURES STAZIONI METEO (temperatura, vento, precipitazioni)
-Creo dataframe delle stazioni con i dati (temp, vento, precipitazioni)
-Merge con il df delle precipitazioni ? (o col principale? non o cpt)
^ATTENZIONE: timestep di 15 minuti (contro i 10 dei consumi elettrici) -> 
-Sostituisco i NaN con un qualche funzione di riempimento tipo ffill() per il df finale
^Attenzione sempre al formato/tipo della data dei vari df quando li unisci

PULIZIA DATAFRAME
-Elimino colonne (features) non più necessarie: 'lineset', ubicazioni varie e 'corrente (le ho gà inglobate nella corrente pesata se non sbaglio, e negli altri di posizione
-Elimino righe identiche

UNISCO DATI SOCIAL PULSE
-Converto data e ora del df social
^Spatial join tra df e mappa
-Unisco i due df (aggiungo così colonna 'tweet' per dire se c'è stato un tweet o no in un luogo)

ORDINO e chiudo DATAFRAME
-Ordino per CellId
-Ordino per Data e ora
-Sostituisco i NaN con ffill() o simile
-Salvo in formato .csv

EDA DICEMBRE: è uguale a quello di novembre, mi pare, basta solo cambiare i nomi qua e là

EDA FINALE FASCE ORARIE (obiettivo: regressione elettr giornaliera nella zona urbana di Trento)
SCOPO (ogni tanto): UNIRE i 2 df di NOV e DIC e SUDDIVISIONE in FASCE ORARIE 

-Scarico i DF creati in precedenza (ovviamente)
-Rimuovo quadratini con dati meteo ma che non hanno linee elettriche 
-Rimuovo giorni infrasettimanali (come da richiesta del prof)
-Unisco i df di Novembre e Dicembre
-Ri-Trasformo le date in secondi, così da poterli normalizzare per il futuro
-Divido i dati del vento in modulo e angolo
-Trasformo i dati numerici in float (le colonne/features numeriche)[dovrebbero essere: tempo(in secondi),
corrente pesata, pioggia, temperatura, precipitazioni, modulo vento, angolo vento, tweet] tipo

DIVIDO I CONSUMI IN 3 FASCE
-Basso, medio, alto -> li scelgo in base ai min e max della corrente, e vedo anche intervallo intermedio
in modo tale da avere 3 classi bilanciate

SFRUTTO GIORNI E FASCE ORARIE
-Aggiungo feature del giorno della settimana (Lunedì=0, Martedì=1, ...)
-Divisione per fasce orarie: ci devono essere (da consegna) le fasce 08-19 e 19-24, ma si possono fare
suddivisioni ulteriori (ex: Mattedo usano orari lavorativi, quindi differenziano anche la pausa pranzo)
-Pulisco: rimuovo tempo, data e ora, vento (ci sono mod e ang vento ormai)
-Salvo df in .csv 
-Calcolo valori medi di tutte le features numeriche nelle singole fasce orarie (invece faccio il totale
per i tweet e pioggia) (non so perchè, mattedo hanno fatto così per questi ultimi due... boh)
-Aggiornamento dei consumi (???)
-Salvo nuovo df in .csv
